openapi: 3.0.0
info:
  title: pocket4cut web1 API docs
  description: pocket4cut web1팀의 API 문서입니다
  version: 0.1.9
servers:
  - url: 'https://port-0-langbot-backend-m22m0z85debbab55.sel4.cloudtype.app'
    description: pocket4cut
paths:
  '/api/user/{user_id}':
    get:
      tags:
        - User
      summary: Get user by ID
      description: 유저 ID를 통해 유저 정보를 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 조회할 유저의 ID
      responses:
        '200':
          description: 유저 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  profileImage:
                    type: string
                    example: 'https://pocket-bucket.s3.ap-northeast-2.amazonaws.com/defaultProfileImage.jpg'
                    description: 사용자의 프로필사진이 없을 때(null)는 기본이미지url 반환
        '404':
          description: 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저를 찾을 수 없습니다.
        '500':
          description: 서버 오류로 인한 유저 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저 조회 실패
    put:
      tags:
        - User
      summary: Update user information
      description: 유저 정보를 수정합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 수정할 유저의 ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                files:
                  type: array
                  format: binary
      responses:
        '200':
          description: 유저 정보 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  profileImage:
                    type: string
                    description: 사용자가 프로필이미지를 삭제하면 null 반환
        '404':
          description: 유저를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저를 찾을 수 없습니다.
        '500':
          description: 서버 오류로 인한 유저 수정 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저 업데이트 실패
        '502':
          description: 기존 이미지 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 기존 이미지 삭제 실패
    delete:
      tags:
        - User
      summary: Delete user
      description: 회원 탈퇴
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 삭제할 유저의 ID
      responses:
        '204':
          description: 유저 탈퇴 성공
        '404':
          description: 유저를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저를 찾을 수 없습니다.
        '500':
          description: 서버 오류로 인한 유저 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저 삭제 실패
  '/api/user/{user_id}/booth-visit':
    get:
      tags:
        - User
      summary: 사용자가 최근 한 달 내에 방문한 부스 조회
      description: 사용자의 최근 한 달 내 방문한 부스 목록을 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 방문한 부스를 조회할 사용자 ID
      responses:
        '200':
          description: 사용자가 최근 한 달 내 방문한 부스 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: 사진을 찍은 날짜
                      example: '2024-10-10'
                    photobooth_name:
                      type: string
                      description: 방문한 포토부스 이름
                      example: 하루필름 강남점
                    photobooth_id:
                      type: integer
                      description: 방문한 포토부스의 ID
                      example: 123
                    photo_url:
                      type: string
                      format: uri
                      description: 사진 URL
                      example: 'https://example.com/photo.jpg'
        '404':
          description: 최근 한 달 내에 방문한 부스가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 방문한 부스가 없습니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 방문한 부스 찾기 실패
  '/api/user/{user_id}/booth-like':
    get:
      tags:
        - User
      summary: 유저가 즐겨찾기한 포토부스 조회
      description: '특정 유저가 즐겨찾기한 포토부스를 조회합니다. 각 포토부스에 대한 가장 최근 리뷰 사진, 부스 이름, 부스 평점, 가장 많이 사용된 키워드, count가 1 이상인 키워드의 개수, 유저가 좋아요한 여부를 반환합니다.'
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 조회할 유저의 ID
      responses:
        '200':
          description: 즐겨찾기한 포토부스 정보 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    photobooth_id:
                      type: integer
                      description: 포토부스 ID
                      example: 1
                    photobooth_name:
                      type: string
                      description: 포토부스 이름
                      example: 인생네컷 홍대점
                    rating:
                      type: number
                      format: float
                      description: 포토부스 평점
                      example: 4.5
                    top_keyword:
                      type: string
                      description: 포토부스에서 가장 많이 사용된 키워드
                      example: 인생네컷
                    keyword_count:
                      type: integer
                      description: count가 1 이상인 키워드의 개수
                      example: 5
                    user_like:
                      type: boolean
                      description: 유저가 해당 포토부스를 좋아요했는지 여부
                      example: true
                    photobooth_image:
                      type: object
                      nullable: true
                      description: 포토부스에 대한 가장 최근 리뷰 사진
                      properties:
                        date:
                          type: string
                          format: date-time
                          description: 리뷰 작성 날짜
                          example: '2024-11-06T12:34:56Z'
                        image_url:
                          type: string
                          description: 리뷰 사진 URL
                          example: 'https://example.com/photo.jpg'
        '404':
          description: 유저 또는 즐겨찾기한 포토부스가 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 즐겨찾기한 포토부스가 없습니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 즐겨찾는 부스 조회 실패
                  error:
                    type: object
                    description: 오류 상세 정보
  '/api/review/user/{user_id}':
    post:
      tags:
        - Review
      summary: Create a new review
      description: 포토부스에 대한 리뷰를 작성합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 작성자의 ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photobooth_name:
                  type: string
                  description: 포토부스 이름
                  example: 포토이즘박스 서울 숭실대점
                rating:
                  type: integer
                  description: 평점
                  example: 4
                booth_keyword:
                  type: array
                  items:
                    type: string
                  description: '포토부스 관련 키워드(사용자 선택값, 띄어쓰기없이)'
                  example:
                    - 넓은부스공간
                    - 청결한부스
                photo_keyword:
                  type: array
                  items:
                    type: string
                  description: '사진 관련 키워드(사용자 선택값, 띄어쓰기없이)'
                  example:
                    - 빛번짐없음
                    - 선명한화질
                content:
                  type: string
                  description: 리뷰 내용
                  example: 청결하고 넓어요. 사진이 예쁘게 나옵니다
                date:
                  type: string
                  format: date
                  description: 리뷰작성 날짜
                  example: '2023-09-25'
                files:
                  type: array
                  description: 이미지가 없으면 null값
                  items:
                    type: string
                  example:
                    - 'https://example.com/image1.jpg'
                    - 'https://example.com/image2.jpg'
    responses:
      '201':
        description: 리뷰 작성 성공
  '/api/review/mypage/{user_id}':
    get:
      tags:
        - Review
      summary: Get recent reviews for a user
      description: 마이페이지에서 사용자의 최근 리뷰를 가져옵니다. limit 파라미터를 통해 가져올 리뷰의 개수 제한 가능(더보기 이전 2개)
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 사용자의 ID
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: 가져올 리뷰의 개수 제한. 기본값은 전체 리뷰입니다.
      responses:
        '200':
          description: 리뷰 가져오기 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviewNum:
                    type: integer
                    description: 전체 리뷰 수
                    example: 3
                  recent_reviews:
                    type: array
                    items:
                      type: object
                      properties:
                        review_id:
                          type: integer
                          description: 리뷰 ID
                          example: 1
                        date:
                          type: string
                          format: date-time
                          description: 리뷰 작성 날짜
                          example: '2024-10-03T10:00:00Z'
                        photobooth_name:
                          type: string
                          description: 포토부스 이름
                          example: 포토이즘박스 공릉점
                        rating:
                          type: integer
                          description: 사용자가 매긴 평점
                          example: 5
                        image:
                          type: string
                          description: 이미지 URL
                          example: 'https://example.com/image.jpg'
                    nullable: true
        '500':
          description: 리뷰를 가져오는 중 오류가 발생했습니다.
  '/api/review/{review_id}':
    delete:
      tags:
        - Review
      summary: Delete a review
      description: 특정 리뷰를 삭제합니다.
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            type: integer
          description: 삭제할 리뷰의 ID
      responses:
        '200':
          description: 리뷰 삭제 성공
        '404':
          description: 리뷰를 찾을 수 없습니다.
        '500':
          description: 리뷰 삭제에 실패했습니다.
    get:
      tags:
        - Review
      summary: Get review details
      description: 특정 리뷰의 상세 정보를 조회합니다.
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            type: integer
          description: 조회할 리뷰의 ID
      responses:
        '200':
          description: 리뷰 상세정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: 리뷰 ID
                  user_id:
                    type: integer
                    description: 작성자 ID
                  photobooth_id:
                    type: integer
                    description: 포토부스 ID
                  rating:
                    type: integer
                    description: 평점
                  booth_keyword:
                    type: array
                    items:
                      type: string
                    description: 포토부스 관련 키워드
                  photo_keyword:
                    type: array
                    items:
                      type: string
                    description: 사진 관련 키워드
                  content:
                    type: string
                    description: 리뷰 내용
                  image_url:
                    type: string
                    description: 이미지 URL
                  date:
                    type: string
                    format: date-time
                    description: 리뷰 작성 날짜
                  Photobooth:
                    type: object
                    properties:
                      name:
                        type: string
                        description: 포토부스 이름
                      brand:
                        type: string
                        description: 포토부스 브랜드
                      rating:
                        type: number
                        description: 포토부스 평균 평점
        '404':
          description: 리뷰를 찾을 수 없습니다.
        '500':
          description: 리뷰를 조회하는 중 오류가 발생했습니다.
  '/api/review/booth/{photobooth_id}':
    get:
      tags:
        - Review
      summary: Get reviews for a photobooth
      description: '해당 포토부스의 최신 리뷰 10개, 키워드 통계 가져옴'
      parameters:
        - in: path
          name: photobooth_id
          required: true
          schema:
            type: integer
          description: 포토부스의 ID
      responses:
        '200':
          description: 리뷰 가져오기 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      type: object
                      properties:
                        review_id:
                          type: integer
                          description: 리뷰 ID
                          example: 1
                        date:
                          type: string
                          format: date-time
                          description: 리뷰 작성 날짜
                          example: '2024-10-03T10:00:00Z'
                        photobooth_name:
                          type: string
                          description: 포토부스 이름
                          example: 포토이즘박스 공릉점
                        rating:
                          type: integer
                          description: 사용자가 매긴 평점
                          example: 5
                        user:
                          type: object
                          properties:
                            name:
                              type: string
                              description: 사용자 이름
                              example: 홍길동
                            profileImage:
                              type: string
                              description: 사용자 프로필 이미지 URL
                              example: 'https://pocket-bucket.s3.ap-northeast-2.amazonaws.com/defaultProfileImage.jpg'
                        booth_keyword:
                          type: object
                          properties:
                            keyword:
                              type: string
                              description: 부스 키워드
                              example: 깔끔한소품
                            count:
                              type: integer
                              description: 해당 리뷰에서 사용자가 등록한 부스 키워드 개수
                              example: 12
                          nullable: true
                        photo_keyword:
                          type: object
                          properties:
                            keyword:
                              type: string
                              description: 촬영 스타일 키워드
                              example: 선명한화질
                            count:
                              type: integer
                              description: 해당 리뷰에서 사용자가 등록한 촬영스타일 키워드 개수
                              example: 8
                          nullable: true
                        content:
                          type: string
                          description: 리뷰 내용
                          example: 부스가 깔끔하고 친절했어요.
                        image:
                          type: string
                          description: 첫 번째 이미지 URL
                          example: 'https://example.com/image1.jpg'
                          nullable: true
                        imageCount:
                          type: integer
                          description: 리뷰에 첨부된 이미지 수
                          example: 3
                  photoKeywordsTotalCount:
                    type: integer
                    description: 촬영 스타일 키워드 총 카운트 (모든 관련 키워드의 총 카운트 합계)
                    example: 20
                  boothKeywordsTotalCount:
                    type: integer
                    description: 부스 키워드 총 카운트 (모든 관련 키워드의 총 카운트 합계)
                    example: 15
                  photoKeywords:
                    type: array
                    items:
                      type: object
                      properties:
                        keyword:
                          type: string
                          description: 촬영 스타일 키워드 전체
                          example: 자연스러운보정
                        count:
                          type: integer
                          description: 포토부스에서 해당 촬영스타일키워드가 전체 몇 번 등록되었는지
                          example: 8
                  boothKeywords:
                    type: array
                    items:
                      type: object
                      properties:
                        keyword:
                          type: string
                          description: 부스 키워드 전체
                          example: 좋은파우더룸
                        count:
                          type: integer
                          description: 포토부스에서 해당 부스키워드가 전체 몇 번 등록되었는지
                          example: 10
        '500':
          description: 리뷰를 가져오는 중 오류가 발생했습니다.
  '/api/review/boothphoto/{photobooth_id}':
    get:
      tags:
        - Review
      summary: Get photobooth rating and review photos
      description: '해당 포토부스의 평점과 각 리뷰의 최대 4개의 이미지, 전체 사진 개수를 가져옴'
      parameters:
        - in: path
          name: photobooth_id
          required: true
          schema:
            type: integer
          description: 포토부스의 ID
      responses:
        '200':
          description: 데이터 가져오기 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  rating:
                    type: number
                    format: float
                    description: 포토부스의 평균 평점
                    example: 4.3
                  reviewPhotos:
                    type: array
                    items:
                      type: string
                      description: 리뷰에서 최대 4개의 이미지 URL
                      example: 'https://amazonaws.com/pocket-imagetest2.jpg'
                  totalImageCount:
                    type: integer
                    description: 해당 포토부스의 모든 리뷰 사진 총 개수
                    example: 10
        '404':
          description: 포토부스를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 해당 부스를 찾을 수 없습니다.
        '500':
          description: 데이터 조회에 실패했습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 데이터 조회에 실패했습니다.
  /api/map:
    get:
      summary: Get photobooths near the current location
      description: 유저의 현 위치를 기반으로 반경 1km 내의 포토부스 정보를 조회합니다. (유저가 위치 제공 안한다면 학교를 기본값으로 함)
      parameters:
        - in: query
          name: latitude
          schema:
            type: string
            example: '37.6329741'
          description: 유저가 현재 위치하고 있는 장소의 위도
        - in: query
          name: longitude
          schema:
            type: string
            example: '127.0798802'
          description: 유저가 현재 위치하고 있는 장소의 경도
        - in: query
          name: brand
          schema:
            type: string
            example: 포토이즘박스
          description: 필터링할 브랜드명 (옵션)
      responses:
        '200':
          description: 포토부스 정보 조회 성공
          content:
            application/json:
              schema:
                oneOf:
                  - description: 브랜드 필터링이 없을 때의 응답
                    type: object
                    properties:
                      photobooths:
                        type: array
                        description: 1km 반경 내의 포토부스들
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 280
                            name:
                              type: string
                              example: 포토이즘 박스 공릉점
                            latitude:
                              type: number
                              format: float
                              example: 37.6267
                            longitude:
                              type: number
                              format: float
                              example: 127.077
                            brand:
                              type: string
                              example: 포토이즘박스
                            rating:
                              type: number
                              format: float
                              example: 0
                  - description: 브랜드 필터링이 있을 때의 응답
                    type: object
                    properties:
                      brandPhotobooths:
                        type: array
                        description: 필터링한 브랜드에 해당하는 포토부스들
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 280
                            name:
                              type: string
                              example: 포토이즘 박스 공릉점
                            latitude:
                              type: number
                              format: float
                              example: 37.6267
                            longitude:
                              type: number
                              format: float
                              example: 127.077
                            brand:
                              type: string
                              example: 포토이즘박스
                            rating:
                              type: number
                              format: float
                              example: 0
                      otherPhotobooths:
                        type: array
                        description: 필터링한 브랜드에 해당하지 않는 포토부스들
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1162
                            name:
                              type: string
                              example: 포토시그니처 경춘숲
                            latitude:
                              type: number
                              format: float
                              example: 37.6266
                            longitude:
                              type: number
                              format: float
                              example: 127.077
                            brand:
                              type: string
                              example: 포토시그니처
                            rating:
                              type: number
                              format: float
                              example: 0
        '500':
          description: Internal server error.
  /api/map/search:
    get:
      summary: Search photobooths based on a location keyword
      description: 검색어 키워드의 위치를 기반으로 반경 1km 내의 포토부스 정보를 조회합니다.
      parameters:
        - in: query
          name: searchTerm
          schema:
            type: string
            example: 명동역
          description: '검색할 장소의 키워드 (구, 역, 건물명)'
      responses:
        '200':
          description: 검색어 키워드 인근의 포토부스 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  place_name:
                    type: string
                    description: 검색어를 기반으로 표시된 지도의 중심 (검색어가 부정확한 경우 해당 키워드와 가장 가까운 장소로 선정)
                    example: 명동역 4호선
                  photobooths:
                    type: array
                    description: 키워드 장소 반경 1km 내의 포토부스들
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 52
                        name:
                          type: string
                          example: 포토이즘 박스 을지로 2호점
                        latitude:
                          type: number
                          format: float
                          example: 37.566
                        longitude:
                          type: number
                          format: float
                          example: 126.991
                        brand:
                          type: string
                          example: 포토이즘박스
                        rating:
                          type: number
                          format: float
                          example: 0
        '400':
          description: 검색 실패 (검색어가 존재하지 않음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 검색어를 입력하세요.
        '500':
          description: Internal server error.
  '/api/album/{user_id}':
    get:
      tags:
        - Photo
      summary: 사용자의 앨범 조회
      description: '사용자가 등록한 사진을 다양한 필터(date, brand, location, hashtag)를 통해 조회합니다.'
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: 사용자의 ID
        - in: query
          name: date
          required: false
          schema:
            type: string
            format: date
            example: 2024-11
          description: 조회할 사진의 연도와 월 (YYYY-MM 형식)
        - in: query
          name: brand
          required: false
          schema:
            type: string
            example: 하루필름
          description: 필터링할 포토부스 브랜드명
        - in: query
          name: location
          required: false
          schema:
            type: boolean
            example: true
          description: '사용자 현재 위치를 기반으로 필터링 여부 (true: 현재 위치 기반)'
        - in: query
          name: hashtag
          required: false
          schema:
            type: string
            example: 여행
          description: 해시태그를 통해 필터링 (부분 일치 가능)
      responses:
        '200':
          description: 필터링된 사진 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  photonum:
                    type: integer
                    description: 조회된 사진 수 (필터링 결과가 없는 경우 0)
                  photos:
                    type: array
                    items:
                      type: object
                      properties:
                        images:
                          type: string
                          description: 사진 URL
                          example: 'https://example.com/photo1.jpg'
                        photo_like:
                          type: boolean
                          description: 사진 즐겨찾기 여부
                          example: true
                        photo_id:
                          type: integer
                          description: 사진id
                          example: 3
        '404':
          description: 사진이 존재하지 않거나 조회된 사진이 없는 경우
        '500':
          description: 서버 오류
  '/api/photo/like/{photo_id}':
    post:
      tags:
        - Photo
      summary: 사진 즐겨찾기 등록
      description: 특정 사진의 즐겨찾기 상태를 true로 변경합니다. 이미 등록된 상태인 경우에는 유지됩니다.
      parameters:
        - in: path
          name: photo_id
          required: true
          schema:
            type: integer
          description: 즐겨찾기 상태를 변경할 사진의 ID
      responses:
        '200':
          description: 즐겨찾기 상태가 성공적으로 등록되었습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  photo_id:
                    type: integer
                    description: 즐겨찾기 상태가 업데이트된 사진의 ID
                    example: 1
                  photo_like:
                    type: boolean
                    description: 즐겨찾기 상태 (항상 true)
                    example: true
        '404':
          description: 해당 ID의 사진이 존재하지 않는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 사진을 찾을 수 없습니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 즐겨찾기 업데이트 실패
  '/api/photo/toggleLike/{photo_id}':
    post:
      tags:
        - Photo
      summary: 사진 즐겨찾기 토글
      description: '특정 사진의 즐겨찾기 상태를 반대로 변경합니다. 사진이 즐겨찾기에 등록되어 있으면 해제하고, 해제되어 있으면 등록합니다.'
      parameters:
        - in: path
          name: photo_id
          required: true
          schema:
            type: integer
          description: 즐겨찾기 상태를 변경할 사진의 ID
      responses:
        '200':
          description: 즐겨찾기 상태가 성공적으로 업데이트되었습니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  photo_id:
                    type: integer
                    description: 즐겨찾기 상태가 업데이트된 사진의 ID
                    example: 1
                  photo_like:
                    type: boolean
                    description: 변경된 즐겨찾기 상태
                    example: true
        '404':
          description: 해당 ID의 사진이 존재하지 않는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 사진을 찾을 수 없습니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 즐겨찾기 업데이트 실패
  '/api/photo/{photo_id}':
    get:
      tags:
        - Photo
      summary: 특정 사진 상세 조회
      description: '특정 사진의 상세 정보를 조회합니다. 포토부스 이름, 날짜, 이미지 URL, 기록, 해시태그, 즐겨찾기 여부를 반환합니다.'
      parameters:
        - in: path
          name: photo_id
          required: true
          schema:
            type: integer
          description: 조회할 사진의 ID
      responses:
        '200':
          description: 요청한 사진의 상세 정보를 반환합니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                    description: 사진이 촬영된 날짜
                    example: '2024-10-10'
                  photobooth_name:
                    type: string
                    description: 사진이 촬영된 포토부스 이름
                    example: 하루필름 강남점
                  hashtags:
                    type: array
                    items:
                      type: string
                    description: 사진에 등록된 해시태그 목록
                    example:
                      - 여행
                      - 친구와
                  image_url:
                    type: string
                    description: 사진 URL
                    example: 'https://example.com/photo.jpg'
                  record:
                    type: string
                    description: 사진에 대한 기록
                    example: 즐거운 하루를 기록합니다.
                  photo_like:
                    type: boolean
                    description: 사진 즐겨찾기 여부
                    example: true
        '404':
          description: 요청한 ID의 사진이 존재하지 않는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 사진을 찾을 수 없습니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error
  /api/photo/temp/upload/qr:
    post:
      tags:
        - Photo
      summary: QR 코드를 통한 사진 업로드
      description: 'QR 코드로부터 이미지 URL을 가져와 S3에 업로드하고, 해당 URL과 사용자 ID를 데이터베이스의 `photoTemp` 테이블에 저장'
      operationId: uploadPhotoByQR
      parameters:
        - name: url
          in: query
          required: true
          description: 'QR 코드의 URL 지원되는 도메인(`haru8.mx2.co.kr`, `qr.seobuk.kr`)'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 사진을 업로드하는 사용자의 ID
              required:
                - user_id
      responses:
        '201':
          description: 성공적으로 사진이 업로드되고 데이터베이스에 저장됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  newTemp:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 등록된 사진의 임시 레코드 ID
                      user_id:
                        type: integer
                        description: 사용자의 ID
                      image_url:
                        type: string
                        description: S3에 저장된 사진의 URL
        '400':
          description: 만료된 QR 코드 또는 지원되지 않는 도메인의 URL이 전달된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 이미 만료된 QR입니다. 또는 지원되지 않는 도메인입니다.
        '500':
          description: 서버 에러로 인해 사진 업로드 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 이미지 업로드 중 에러 발생
                  error:
                    type: string
                    description: 에러 메시지
  /api/photo/temp/upload/img:
    post:
      tags:
        - Photo
      summary: 갤러리 사진 업로드
      description: '이미지 파일을 업로드하여 S3에 저장하고, 해당 URL과 사용자 ID를 데이터베이스의 `photoTemp` 테이블에 저장'
      operationId: uploadPhotoByImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 업로드할 이미지 파일 (최대 크기 5MB)
                user_id:
                  type: integer
                  description: 사진을 업로드하는 사용자의 ID
              required:
                - file
                - user_id
      responses:
        '201':
          description: 성공적으로 사진이 업로드되고 데이터베이스에 저장됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  newTemp:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 등록된 사진의 임시 레코드 ID
                      user_id:
                        type: integer
                        description: 사용자의 ID
                      image_url:
                        type: string
                        description: S3에 저장된 사진의 URL
        '400':
          description: 파일 업로드 제한 오류 발생 (파일 크기 초과 등)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 파일 크기 초과 또는 잘못된 요청 형식
        '500':
          description: 서버 에러로 인해 사진 업로드 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 이미지 업로드에 실패했습니다.
  '/api/photo/temp/{photoTemp_id}/update-info':
    put:
      tags:
        - Photo
      summary: 날짜와 포토부스 정보 추가
      description: 임시 사진 레코드에 찍은 날짜와 포토부스 정보를 업데이트
      operationId: updatePhotoInfo
      parameters:
        - name: photoTemp_id
          in: path
          required: true
          description: 업데이트할 사진 레코드의 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: 사진 찍은 날짜 (YYYY-MM-DD)
                photobooth_id:
                  type: integer
                  description: 사진을 찍은 포토부스의 ID
              required:
                - date
                - photobooth_id
      responses:
        '200':
          description: 날짜 및 포토부스 정보가 성공적으로 추가됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 날짜 및 포토부스 장소 정보가 추가되었습니다.
                  temp:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 사진 레코드의 ID
                      date:
                        type: string
                        format: date
                        description: 업데이트된 날짜
                      photobooth_id:
                        type: integer
                        description: 업데이트된 포토부스 ID
        '500':
          description: 서버 에러로 인해 날짜 및 포토부스 정보 업데이트 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 이미지 업로드에 실패했습니다.
  '/api/photo/temp/{photoTemp_id}/update-record':
    put:
      tags:
        - Photo
      summary: 해시태그 및 기록 추가
      description: 임시 사진 레코드에 해시태그와 줄글 기록을 업데이트
      operationId: updatePhotoRecord
      parameters:
        - name: photoTemp_id
          in: path
          required: true
          description: 업데이트할 사진 레코드의 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hashtag_1:
                  type: string
                  description: 첫 번째 해시태그 (최대 10자)
                hashtag_2:
                  type: string
                  description: 두 번째 해시태그 (최대 10자)
                hashtag_3:
                  type: string
                  description: 세 번째 해시태그 (최대 10자)
                record:
                  type: string
                  description: 줄글 기록 내용
              required:
                - record
      responses:
        '200':
          description: 해시태그와 기록이 성공적으로 추가됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 해시태그와 기록이 추가되었습니다.
                  temp:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 사진 레코드의 ID
                      hashtag_1:
                        type: string
                        description: 첫 번째 해시태그
                      hashtag_2:
                        type: string
                        description: 두 번째 해시태그
                      hashtag_3:
                        type: string
                        description: 세 번째 해시태그
                      record:
                        type: string
                        description: 줄글 기록 내용
        '500':
          description: 서버 에러로 인해 해시태그 및 기록 업데이트 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 이미지 업로드에 실패했습니다.
  '/api/photo/save/{photoTemp_id}':
    post:
      tags:
        - Photo
      summary: 임시 데이터 최종 저장
      description: '임시 테이블 `photoTemp`에 있는 데이터를 `photo` 테이블에 저장하고, 임시 레코드 삭제'
      operationId: saveFinalPhoto
      parameters:
        - name: photoTemp_id
          in: path
          required: true
          description: 저장할 임시 사진 레코드의 ID
          schema:
            type: integer
      responses:
        '201':
          description: 사진이 성공적으로 저장되고 임시 데이터가 삭제됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 사진이 성공적으로 저장되었습니다!
                  newPhoto:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 최종 저장된 사진 레코드의 ID
                      user_id:
                        type: integer
                        description: 사용자의 ID
                      photobooth_id:
                        type: integer
                        description: 사진을 찍은 포토부스의 ID
                      image_url:
                        type: string
                        description: 최종 저장된 사진의 URL
                      date:
                        type: string
                        format: date
                        description: 사진을 찍은 날짜
                      record:
                        type: string
                        description: 줄글 기록 내용
                      hashtag_1:
                        type: string
                        description: 첫 번째 해시태그
                      hashtag_2:
                        type: string
                        description: 두 번째 해시태그
                      hashtag_3:
                        type: string
                        description: 세 번째 해시태그
        '400':
          description: 임시 테이블에서 레코드 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Temp 삭제에 실패했습니다.
        '500':
          description: 서버 에러로 인해 최종 사진 저장 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 이미지 저장에 실패했습니다.
  '/api/photo/delete/{photo_id}':
    delete:
      tags:
        - Photo
      summary: 사진 삭제
      description: 지정된 ID의 사진을 S3에서 삭제하고 데이터베이스의 `photo` 테이블에서 제거
      operationId: deletePhoto
      parameters:
        - name: photo_id
          in: path
          required: true
          description: 삭제할 사진 레코드의 ID
          schema:
            type: integer
      responses:
        '204':
          description: 사진이 성공적으로 삭제됨 (콘텐츠 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 이미지를 삭제했습니다.
        '500':
          description: 서버 에러로 인해 사진 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 이미지 삭제에 실패했습니다.
  '/api/photo/share/{photo_id}':
    get:
      tags:
        - Photo
      summary: 사진 공유 링크 가져오기
      description: 지정된 ID의 사진에 대한 공유 링크를 반환
      operationId: getSharePhotoLink
      parameters:
        - name: photo_id
          in: path
          required: true
          description: 공유할 사진 레코드의 ID
          schema:
            type: integer
      responses:
        '200':
          description: 사진의 공유 링크가 성공적으로 반환됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  shareLink:
                    type: string
                    description: 공유 링크 (S3에 저장된 사진의 URL)
                    example: 'https://example-bucket.s3.amazonaws.com/photo.jpg'
        '404':
          description: 해당 ID의 사진을 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 사진을 찾을 수 없습니다.
        '500':
          description: 서버 에러로 인해 공유 링크 생성 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 공유 링크 생성 실패
  /api/photo/temp/update-info:
    get:
      summary: 포토부스 지점 검색
      description: 검색어를 입력하여 포토부스 이름과 ID를 조회합니다.
      parameters:
        - name: searchTerm
          in: query
          required: true
          description: 검색어 (포토부스 이름의 일부)
          schema:
            type: string
      responses:
        '200':
          description: 검색된 포토부스 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: 포토부스 ID
                    name:
                      type: string
                      description: 포토부스 이름
        '400':
          description: 검색어가 제공되지 않았거나 유효하지 않음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 검색어가 필요합니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 검색 과정 중 오류가 발생했습니다.
  /api/booth/:
    post:
      tags:
        - Booth
      summary: 부스 즐겨찾기 등록
      description: 특정 유저가 포토부스를 즐겨찾기에 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 즐겨찾기에 등록할 유저의 ID
                  example: 1
                photobooth_id:
                  type: integer
                  description: 즐겨찾기에 등록할 포토부스의 ID
                  example: 101
      responses:
        '200':
          description: 포토부스 즐겨찾기 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 포토부스가 즐겨찾기 되었습니다.
        '400':
          description: 존재하지 않는 유저 또는 포토부스
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 존재하지 않는 유저거나 존재하지 않는 부스입니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 즐겨찾기에 실패했습니다.
    delete:
      tags:
        - Booth
      summary: 부스 즐겨찾기 해제
      description: 특정 유저가 포토부스를 즐겨찾기에서 해제합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 즐겨찾기에서 해제할 유저의 ID
                  example: 1
                photobooth_id:
                  type: integer
                  description: 즐겨찾기에서 해제할 포토부스의 ID
                  example: 101
      responses:
        '200':
          description: 포토부스 즐겨찾기 해제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 포토부스가 즐겨찾기 해제 되었습니다.
        '400':
          description: 존재하지 않는 유저 또는 포토부스
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 존재하지 않는 유저거나 존재하지 않는 부스입니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 즐겨찾기 해제에 실패했습니다.
  '/api/booth/{photobooth_id}':
    get:
      tags:
        - Booth
      summary: 부스 모달창 정보 조회
      description: '모달창에 들어갈 부스의 평점, 상위 두 개의 키워드, 이미지 개수, 첫 번째 이미지, 리뷰 개수를 반환합니다.'
      parameters:
        - in: path
          name: photobooth_id
          required: true
          schema:
            type: integer
          description: 조회할 포토부스의 ID
      responses:
        '200':
          description: 부스 모달 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  rating:
                    type: number
                    format: float
                    description: 포토부스 평점
                    example: 4.3
                  topHashtag:
                    type: array
                    items:
                      type: string
                    description: 가장 많이 사용된 상위 두 개의 해시태그
                    example:
                      - 인생네컷
                      - 친구
                  imageCount:
                    type: integer
                    description: 포토부스 리뷰의 전체 이미지 개수
                    example: 15
                  firstImage:
                    type: string
                    nullable: true
                    description: 리뷰에서 가장 첫 번째 이미지의 URL
                    example: 'https://example.com/photo.jpg'
                  reviewCount:
                    type: integer
                    description: 부스 리뷰 개수
                    example: 5
        '404':
          description: 해당 포토부스를 찾을 수 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 해당 부스를 찾을 수 없습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 부스 정보를 가져오는 데 실패했습니다.
  '/api/booth/location/{phtobooth_id}':
    get:
      tags:
        - Booth
      summary: 포토부스 위치 정보 조회
      description: '포토부스 ID를 통해 해당 부스의 이름, 위도, 경도, 평점을 조회합니다.'
      parameters:
        - in: path
          name: photobooth_id
          required: true
          schema:
            type: integer
          description: 조회할 포토부스의 ID
      responses:
        '200':
          description: 포토부스 위치 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  booth_name:
                    type: string
                    description: 포토부스 이름
                    example: 인생네컷 홍대점
                  latitude:
                    type: number
                    format: float
                    description: 포토부스의 위도
                    example: 37.5665
                  longitude:
                    type: number
                    format: float
                    description: 포토부스의 경도
                    example: 126.978
                  rating:
                    type: number
                    format: float
                    description: 포토부스의 평점
                    example: 4.5
        '404':
          description: 해당 ID의 포토부스를 찾을 수 없는 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 해당 포토부스를 찾을 수 없습니다.
        '500':
          description: 서버 오류 발생 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 포토부스 정보를 가져오는 데 실패했습니다.
